package CommsMessages;
 
//import "google/protobuf/csharp_options.proto";
//
//option (google.protobuf.csharp_file_options).namespace = "Onewheel.Interface";
//option (google.protobuf.csharp_file_options).umbrella_classname = "WorldEventsProtos";

option optimize_for = SPEED;

message Base {

  message Ping
  {
  }
  
  message Register
  {
    required string name = 1;
  }
  
  message Registered
  {
    required string motd = 1;
    required int32 objectid = 2;
  }
  
  message Message 
  {
    required int32 from = 1;
    required int32 target = 2;
    required string message = 3;
  }
  
  message Coords
  {
    required int32 x = 1;
    required int32 y = 2;
  }
  
  message Move
  {
    required int32 object = 1;
    required Coords from = 2;
    required Coords to = 3;
    required int32 speed = 4;
  }
  
  message Action
  {
    required int32 from = 1;
    required Coords target = 2;
    required string what = 3;
    required string with = 4;
  }
  
  message Object
  {
    required Coords location = 1;
    required int32 type = 2;
    required ObjectAction action = 3;
    required Coords destination = 4;
    required int32 speed = 5;
  
    enum ObjectAction {
      ADD = 0;
      REMOVE = 1;
      MOVE = 2;
    }
  }

  enum MsgType {
    EPing = 1;
    ERegister = 2;
    ERegistered  = 3;
    EMessage = 4;
    EMovement = 5;
    EAction = 6;
    EObject = 7;
  }

  // Identifies which field is filled in.
  required MsgType msgtype = 1;

  // One of the following will be filled in.
  optional Ping ping  = 2;
  optional Register register  = 3;
  optional Registered registered = 4;
  optional Message message = 5;
  optional Move move = 6;
  optional Action action = 7;
  optional Object object = 8;
}

//service WebService {
//  rpc RegisterClient (RegisterClientRequest) returns (Status);
//  rpc Chat (Message) returns (Status);
//  rpc DoAction (Action) returns (Status);
//  rpc Move (Movement) returns (Status);
//}

//message Person {
//  required string name = 1;
//  required int32 id = 2;
//  optional string email = 3;
//
//  enum PhoneType {
//    MOBILE = 0;
//    HOME = 1;
//    WORK = 2;
//  }
//
//  message PhoneNumber {
//    required string number = 1;
//    optional PhoneType type = 2 [default = HOME];
//  }
//
//  repeated PhoneNumber phone = 4;
//}
// 
//// Our address book file is just one of these.
//message AddressBook {
//  repeated Person person = 1;
//}

//message ServerInfoRequest {
//  required string clientname = 1;
//  optional int32 number = 2;
//}
//
//message ServerInfoResponse {
//  required string servername = 1;
//}

